---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: terraform-aws-eks-cluster

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Canonical GitHub repo
github_repo: cloudposse/terraform-aws-eks-cluster

# Badges to display
badges:
  - name: "Build Status"
    image: "https://travis-ci.org/cloudposse/terraform-aws-eks-cluster.svg?branch=master"
    url: "https://travis-ci.org/cloudposse/terraform-aws-eks-cluster"
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/terraform-aws-eks-cluster.svg"
    url: "https://github.com/cloudposse/terraform-aws-eks-cluster/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"

related:
  - name: "terraform-aws-eks-workers"
    description: "Terraform module to provision an AWS AutoScaling Group, IAM Role, and Security Group for EKS Workers"
    url: "https://github.com/cloudposse/terraform-aws-eks-workers"
  - name: "terraform-aws-ec2-autoscale-group"
    description: "Terraform module to provision Auto Scaling Group and Launch Template on AWS"
    url: "https://github.com/cloudposse/terraform-aws-ec2-autoscale-group"
  - name: "terraform-aws-ecs-container-definition"
    description: "Terraform module to generate well-formed JSON documents (container definitions) that are passed to the  aws_ecs_task_definition Terraform resource"
    url: "https://github.com/cloudposse/terraform-aws-ecs-container-definition"
  - name: "terraform-aws-ecs-alb-service-task"
    description: "Terraform module which implements an ECS service which exposes a web service via ALB"
    url: "https://github.com/cloudposse/terraform-aws-ecs-alb-service-task"
  - name: "erraform-aws-ecs-web-app"
    description: "Terraform module that implements a web app on ECS and supports autoscaling, CI/CD, monitoring, ALB integration, and much more"
    url: "https://github.com/cloudposse/terraform-aws-ecs-web-app"
  - name: "terraform-aws-ecs-codepipeline"
    description: "Terraform module for CI/CD with AWS Code Pipeline and Code Build for ECS"
    url: "https://github.com/cloudposse/terraform-aws-ecs-codepipeline"
  - name: "terraform-aws-ecs-cloudwatch-autoscaling"
    description: "Terraform module to autoscale ECS Service based on CloudWatch metrics"
    url: "https://github.com/cloudposse/terraform-aws-ecs-cloudwatch-autoscaling"
  - name: "terraform-aws-ecs-cloudwatch-sns-alarms"
    description: "Terraform module to create CloudWatch Alarms on ECS Service level metrics"
    url: "https://github.com/cloudposse/terraform-aws-ecs-cloudwatch-sns-alarms"
  - name: "terraform-aws-ec2-instance"
    description: "Terraform module for providing a general purpose EC2 instance"
    url: "https://github.com/cloudposse/terraform-aws-ec2-instance"
  - name: "terraform-aws-ec2-instance-group"
    description: "Terraform module for provisioning multiple general purpose EC2 hosts for stateful applications"
    url: "https://github.com/cloudposse/terraform-aws-ec2-instance-group"

# Short description of this project
description: |-
  Terraform module to provision an [EKS](https://aws.amazon.com/eks/) cluster on AWS.

introduction: |-
  The module provisions the following resources:

  - EKS cluster of master nodes that can be used together with the [terraform-aws-eks-workers](https://github.com/cloudposse/terraform-aws-eks-workers) module to create a full-blown cluster
  - IAM Role to allow the cluster to access other AWS services
  - Security Group which is used by EKS workers to connect to the cluster and kubelets and pods to receive communication from the cluster control plane (see [terraform-aws-eks-workers](https://github.com/cloudposse/terraform-aws-eks-workers))
  - The module generates `kubeconfig` configuration to connect to the cluster using `kubectl`

# How to use this project
usage: |-

  Module usage examples:

  - [examples/complete](examples/complete) - complete example
  - [terraform-root-modules/eks](https://github.com/cloudposse/terraform-root-modules/tree/master/aws/eks) - Cloud Posse's service catalog of "root module" invocations for provisioning reference architectures
  - [terraform-root-modules/eks-backing-services-peering](https://github.com/cloudposse/terraform-root-modules/tree/master/aws/eks-backing-services-peering) - example of VPC peering between the EKS VPC and backing services VPC

  ```hcl
  provider "aws" {
    region = "us-west-2"
  }

  variable "tags" {
    type        = "map"
    default     = {}
    description = "Additional tags (e.g. map('BusinessUnit','XYZ')"
  }

  locals {
    # The usage of the specific kubernetes.io/cluster/* resource tags below are required
    # for EKS and Kubernetes to discover and manage networking resources
    # https://www.terraform.io/docs/providers/aws/guides/eks-getting-started.html#base-vpc-networking
    tags = "${merge(var.tags, map("kubernetes.io/cluster/eg-testing-cluster", "shared"))}"
  }

  module "vpc" {
    source     = "git::https://github.com/cloudposse/terraform-aws-vpc.git?ref=master"
    namespace  = "eg"
    stage      = "testing"
    name       = "cluster"
    tags       = "${local.tags}"
    cidr_block = "10.0.0.0/16"
  }

  module "subnets" {
    source              = "git::https://github.com/cloudposse/terraform-aws-dynamic-subnets.git?ref=master"
    availability_zones  = ["us-west-1a", "us-west-1b", "us-west-1c", "us-west-1d"]
    namespace           = "eg"
    stage               = "testing"
    name                = "cluster"
    tags                = "${local.tags}"
    region              = "us-west-2"
    vpc_id              = "${module.vpc.vpc_id}"
    igw_id              = "${module.vpc.igw_id}"
    cidr_block          = "${module.vpc.vpc_cidr_block}"
    nat_gateway_enabled = "true"
  }

  module "eks_cluster" {
    source                  = "git::https://github.com/cloudposse/terraform-aws-eks-cluster.git?ref=master"
    namespace               = "eg"
    stage                   = "testing"
    name                    = "cluster"
    tags                    = "${var.tags}"
    vpc_id                  = "${module.vpc.vpc_id}"
    subnet_ids              = ["${module.subnets.public_subnet_ids}"]

    # `workers_security_group_count` is needed to prevent `count can't be computed` errors
    workers_security_group_ids   = ["${module.eks_workers.security_group_id}"]
    workers_security_group_count = 1
  }

  module "eks_workers" {
    source                             = "git::https://github.com/cloudposse/terraform-aws-eks-workers.git?ref=master"
    namespace                          = "eg"
    stage                              = "testing"
    name                               = "cluster"
    tags                               = "${var.tags}"
    instance_type                      = "t2.medium"
    vpc_id                             = "${module.vpc.vpc_id}"
    subnet_ids                         = ["${module.subnets.public_subnet_ids}"]
    health_check_type                  = "EC2"
    min_size                           = 1
    max_size                           = 3
    wait_for_capacity_timeout          = "10m"
    associate_public_ip_address        = true
    cluster_name                       = "eg-testing-cluster"
    cluster_endpoint                   = "${module.eks_cluster.eks_cluster_endpoint}"
    cluster_certificate_authority_data = "${module.eks_cluster.eks_cluster_certificate_authority_data}"
    cluster_security_group_id          = "${module.eks_cluster.security_group_id}"

    # Auto-scaling policies and CloudWatch metric alarms
    autoscaling_policies_enabled           = "true"
    cpu_utilization_high_threshold_percent = "80"
    cpu_utilization_low_threshold_percent  = "20"
  }
  ```

include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors:
  - name: "Erik Osterman"
    homepage: "https://github.com/osterman"
    avatar: "http://s.gravatar.com/avatar/88c480d4f73b813904e00a5695a454cb?s=144"
    github: "osterman"
  - name: "Andriy Knysh"
    homepage: "https://github.com/aknysh/"
    avatar: "https://avatars0.githubusercontent.com/u/7356997?v=4&u=ed9ce1c9151d552d985bdf5546772e14ef7ab617&s=144"
    github: "aknysh"
  - name: "Igor Rodionov"
    homepage: "https://github.com/goruha/"
    avatar: "http://s.gravatar.com/avatar/bc70834d32ed4517568a1feb0b9be7e2?s=144"
    github: "goruha"
